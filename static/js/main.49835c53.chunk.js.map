{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","REVERSE","App","useState","sortField","setSortField","reverseMethod","setReverseMethod","visibleGroceries","groceries","preparedGroceries","sort","groceries1","groceries2","localeCompare","length","reverse","getPreparedGroceries","className","type","cn","onClick","map","grocery","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,eACjBC,EAAU,UAyBT,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACMC,EA1BR,SAA8BC,EAAWL,EAAWE,GAClD,IAAMI,EAAiB,YAAOD,GAmB9B,OAjBIL,GACFM,EAAkBC,MAChB,SAACC,EAAYC,GACX,OAAQT,GACN,KAAKL,EACH,OAAOa,EAAWE,cAAcD,GAElC,KAAKb,EACH,OAAOY,EAAWG,OAASF,EAAWE,OAExC,QACE,OAAO,MAMVT,EAAgBI,EAAkBM,UAAYN,EAM5BO,CACvBnB,EAAiBM,EAAWE,GAG9B,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBE,IAAG,CAAE,WAAYhB,IAAcL,KAC5DsB,QAAS,kBAAMhB,EAAaN,IAH9B,iCAQA,wBACEoB,KAAK,SACLD,UAAS,4BAAuBE,IAAG,CAAE,WAAYhB,IAAcJ,KAC/DqB,QAAS,kBAAMhB,EAAaL,IAH9B,4BAQA,wBACEmB,KAAK,SACLD,UAAS,4BAAuBE,IAAG,CAAE,WAAYd,IAAkBL,KACnEoB,QAAS,kBACLd,EAD8B,KAAlBD,EACK,GACAL,IALvB,qBAUe,KAAdG,GAEG,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAMhB,EAAa,KAH9B,sBASN,6BACGG,EAAiBc,KAAI,SAAAC,GAAO,OAC3B,oBAAI,UAAQ,OAAZ,SAAoBA,aC3F9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.49835c53.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'sortByLength';\nconst REVERSE = 'reverse';\n\nfunction getPreparedGroceries(groceries, sortField, reverseMethod) {\n  const preparedGroceries = [...groceries];\n\n  if (sortField) {\n    preparedGroceries.sort(\n      (groceries1, groceries2) => {\n        switch (sortField) {\n          case SORT_BY_ALPHABET:\n            return groceries1.localeCompare(groceries2);\n\n          case SORT_BY_LENGTH:\n            return groceries1.length - groceries2.length;\n\n          default:\n            return 0;\n        }\n      },\n    );\n  }\n\n  return reverseMethod ? preparedGroceries.reverse() : preparedGroceries;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseMethod, setReverseMethod] = useState('');\n  const visibleGroceries = getPreparedGroceries(\n    goodsFromServer, sortField, reverseMethod,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${cn({ 'is-light': sortField !== SORT_BY_ALPHABET })}`}\n          onClick={() => setSortField(SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${cn({ 'is-light': sortField !== SORT_BY_LENGTH })}`}\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${cn({ 'is-light': reverseMethod !== REVERSE })}`}\n          onClick={() => (reverseMethod !== ''\n            ? setReverseMethod('')\n            : setReverseMethod(REVERSE))}\n        >\n          Reverse\n        </button>\n\n        {sortField !== ''\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => setSortField('')}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n      <ul>\n        {visibleGroceries.map(grocery => (\n          <li data-cy=\"Good\">{grocery}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}